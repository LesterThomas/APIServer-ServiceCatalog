{
    "type": "object",
    "description": "The root entity for service catalog management.\nA service catalog is a group of service specifications made available through service candidates that an organization provides to the consumers (internal consumers like its employees or B2B customers or B2C customers). \nA service catalog typically includes name, description and time period that is valid for. It will have a list of ServiceCandidate catalog items. A ServiceCandidate is an entity that makes a ServiceSpecification available to a catalog.\nA ServiceCandidate and its associated ServiceSpecification may be \"published\" - made visible -in any number of ServiceCatalogs, or in none.",
    "properties": {
        "id": {
            "type": "string",
            "description": "Unique identifier of the Catalog"
        },
        "href": {
            "type": "string",
            "description": "Unique reference of the catalog"
        },
        "name": {
            "type": "string",
            "description": "Name of the catalog"
        },
        "description": {
            "type": "string",
            "description": "Description of this catalog"
        },
        "@type": {
            "type": "string",
            "description": "Indicates the (class) type of catalog. For service catalogs, this will be 'ServiceCatalog'."
        },
        "@schemaLocation": {
            "type": "string",
            "description": "This field provides a link to the schema describing this REST resource"
        },
        "@baseType": {
            "type": "string",
            "description": "Indicates<b> </b>the base (class) type of this REST resource"
        },
        "version": {
            "type": "string",
            "description": "Catalog version"
        },
        "validFor": {
            "type": "object",
            "description": "A base / value business entity used to represent a period of time between two timepoints.",
            "properties": {
                "startDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "An instant of time, starting at the TimePeriod"
                },
                "endDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "An instant of time, ending at the TimePeriod."
                }
            }
        },
        "lastUpdate": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of the last update"
        },
        "lifecycleStatus": {
            "type": "string",
            "description": "Used to indicate the current lifecycle status"
        }
    }
}